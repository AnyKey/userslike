// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: like/like.proto

package like

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Q1: Set "like" for track request
type LikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artist string `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Jwt    string `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *LikeRequest) Reset() {
	*x = LikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_like_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeRequest) ProtoMessage() {}

func (x *LikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_like_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeRequest.ProtoReflect.Descriptor instead.
func (*LikeRequest) Descriptor() ([]byte, []int) {
	return file_like_like_proto_rawDescGZIP(), []int{0}
}

func (x *LikeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LikeRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *LikeRequest) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

// Q2: Likes for track request
type TrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artist string `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (x *TrackRequest) Reset() {
	*x = TrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_like_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRequest) ProtoMessage() {}

func (x *TrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_like_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRequest.ProtoReflect.Descriptor instead.
func (*TrackRequest) Descriptor() ([]byte, []int) {
	return file_like_like_proto_rawDescGZIP(), []int{1}
}

func (x *TrackRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrackRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

// Q1: Set "like" for track response
type LikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LikeReply) Reset() {
	*x = LikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_like_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeReply) ProtoMessage() {}

func (x *LikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_like_like_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeReply.ProtoReflect.Descriptor instead.
func (*LikeReply) Descriptor() ([]byte, []int) {
	return file_like_like_proto_rawDescGZIP(), []int{2}
}

func (x *LikeReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Q2: Likes for track response
type TrackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Track    string `protobuf:"bytes,1,opt,name=track,proto3" json:"track,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *TrackReply) Reset() {
	*x = TrackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_like_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackReply) ProtoMessage() {}

func (x *TrackReply) ProtoReflect() protoreflect.Message {
	mi := &file_like_like_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackReply.ProtoReflect.Descriptor instead.
func (*TrackReply) Descriptor() ([]byte, []int) {
	return file_like_like_proto_rawDescGZIP(), []int{3}
}

func (x *TrackReply) GetTrack() string {
	if x != nil {
		return x.Track
	}
	return ""
}

func (x *TrackReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_like_like_proto protoreflect.FileDescriptor

var file_like_like_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4b, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x77, 0x74, 0x22, 0x3a, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x22, 0x25, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x6c, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x53, 0x72,
	0x76, 0x12, 0x2f, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x11, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6c,
	0x69, 0x6b, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x72, 0x76, 0x2f, 0x6c, 0x69, 0x6b, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_like_like_proto_rawDescOnce sync.Once
	file_like_like_proto_rawDescData = file_like_like_proto_rawDesc
)

func file_like_like_proto_rawDescGZIP() []byte {
	file_like_like_proto_rawDescOnce.Do(func() {
		file_like_like_proto_rawDescData = protoimpl.X.CompressGZIP(file_like_like_proto_rawDescData)
	})
	return file_like_like_proto_rawDescData
}

var file_like_like_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_like_like_proto_goTypes = []interface{}{
	(*LikeRequest)(nil),  // 0: main.LikeRequest
	(*TrackRequest)(nil), // 1: main.TrackRequest
	(*LikeReply)(nil),    // 2: main.LikeReply
	(*TrackReply)(nil),   // 3: main.TrackReply
}
var file_like_like_proto_depIdxs = []int32{
	0, // 0: main.SubSrv.SetLike:input_type -> main.LikeRequest
	1, // 1: main.SubSrv.GetLike:input_type -> main.TrackRequest
	2, // 2: main.SubSrv.SetLike:output_type -> main.LikeReply
	3, // 3: main.SubSrv.GetLike:output_type -> main.TrackReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_like_like_proto_init() }
func file_like_like_proto_init() {
	if File_like_like_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_like_like_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_like_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_like_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_like_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_like_like_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_like_like_proto_goTypes,
		DependencyIndexes: file_like_like_proto_depIdxs,
		MessageInfos:      file_like_like_proto_msgTypes,
	}.Build()
	File_like_like_proto = out.File
	file_like_like_proto_rawDesc = nil
	file_like_like_proto_goTypes = nil
	file_like_like_proto_depIdxs = nil
}
